/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import DAO.ChangePasswordDAO;
import Models.ChangePassword;
import Services.AuthKhachHang;
import Services.AuthNhanVien;
import javax.swing.JOptionPane;
import org.mindrot.jbcrypt.BCrypt;

/**
 *
 * @author Ggame
 */
public class ChangePasswordFrame extends javax.swing.JFrame {

    /**
     * Creates new form ChangePasswordFrame
     */
    public ChangePasswordFrame() {
        initComponents();
        onLoad();
    }

    public void onLoad() {
        if (AuthKhachHang.user != null) {
            int MaKhachHang = AuthKhachHang.maKhachHang();
            String email = ChangePasswordDAO.getEmailKH(MaKhachHang);
            txt_email.setText(email);
        } else {
            String maNhanVien = AuthNhanVien.getMaNhanVien();
            String email = ChangePasswordDAO.getEmailNV(maNhanVien);
            txt_email.setText(email);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_email = new javax.swing.JTextField();
        txt_mk_cu = new javax.swing.JPasswordField();
        txt_mk_moi = new javax.swing.JPasswordField();
        txt_xac_nhan_mk_moi = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setText("Gmail");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setText("Mật khẩu cũ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setText("Mật khẩu mới");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setText("Xác nhận mật khẩu mới");

        txt_email.setEditable(false);
        txt_email.setPreferredSize(new java.awt.Dimension(64, 30));

        txt_mk_cu.setPreferredSize(new java.awt.Dimension(64, 30));

        txt_mk_moi.setPreferredSize(new java.awt.Dimension(64, 30));

        txt_xac_nhan_mk_moi.setPreferredSize(new java.awt.Dimension(64, 30));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Xác nhận");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Đổi mật khẩu");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quay_lai.png"))); // NOI18N
        jLabel9.setPreferredSize(new java.awt.Dimension(128, 75));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txt_mk_moi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_mk_cu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_xac_nhan_mk_moi, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_mk_cu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_mk_moi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txt_xac_nhan_mk_moi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (AuthKhachHang.user != null) {
            String emailKH = txt_email.getText().trim();
            char[] mkKHcu = txt_mk_cu.getPassword();
            String mkKHcuStr = new String(mkKHcu);

            char[] mkKHmoi = txt_mk_moi.getPassword();
            String mkKHmoiStr = new String(mkKHmoi);

            char[] XNmkMoi = txt_xac_nhan_mk_moi.getPassword();
            String XNmkMoiStr = new String(XNmkMoi);

            if (mkKHcuStr.isEmpty() || mkKHmoiStr.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "❌ Vui lòng nhập đầy đủ thông tin",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            ChangePasswordDAO cpDAO = new ChangePasswordDAO();

            String matKhauHienTai = cpDAO.getMatKhauKH(emailKH);
            if (!BCrypt.checkpw(mkKHcuStr, matKhauHienTai)) {
                JOptionPane.showMessageDialog(this,
                        "❌ Mật khẩu cũ không đúng!",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!mkKHmoiStr.equals(XNmkMoiStr)) {
                JOptionPane.showMessageDialog(this,
                        "❌ Mật khẩu xác nhận không khớp!",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            String matKhauMớiDaMãHóa = BCrypt.hashpw(mkKHmoiStr, BCrypt.gensalt(12));

            ChangePassword cp = new ChangePassword();
            cp.setEmailKH(emailKH);
            cp.setMkKH(matKhauMớiDaMãHóa);

            if (cpDAO.updateMKKH(cp)) {
                JOptionPane.showMessageDialog(this,
                        "✅ Đổi mật khẩu thành công!",
                        "Thành công",
                        JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                AuthKhachHang.clear();
                FormDangKyNew cliF = new FormDangKyNew();
                cliF.setLocationRelativeTo(null);
                cliF.setVisible(true);
                return;
            } else {
                JOptionPane.showMessageDialog(this,
                        "❌ Đổi mật khẩu thất bại! Vui lòng kiểm tra lại.",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            String emailKH = txt_email.getText().trim();
            char[] mkKHcu = txt_mk_cu.getPassword();
            String mkKHcuStr = new String(mkKHcu);

            char[] mkKHmoi = txt_mk_moi.getPassword();
            String mkKHmoiStr = new String(mkKHmoi);

            char[] XNmkMoi = txt_xac_nhan_mk_moi.getPassword();
            String XNmkMoiStr = new String(XNmkMoi);

            if (mkKHcuStr.isEmpty() || mkKHmoiStr.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "❌ Vui lòng nhập đầy đủ thông tin",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            ChangePasswordDAO cpDAO = new ChangePasswordDAO();

            String matKhauHienTai = cpDAO.getMatKhauNV(emailKH);
            if (!BCrypt.checkpw(mkKHcuStr, matKhauHienTai)) {
                JOptionPane.showMessageDialog(this,
                        "❌ Mật khẩu cũ không đúng!",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!mkKHmoiStr.equals(XNmkMoiStr)) {
                JOptionPane.showMessageDialog(this,
                        "❌ Mật khẩu xác nhận không khớp!",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            String matKhauMớiDaMãHóa = BCrypt.hashpw(mkKHmoiStr, BCrypt.gensalt(12));

            ChangePassword cp = new ChangePassword();
            cp.setEmailNV(emailKH);
            cp.setMkNV(matKhauMớiDaMãHóa);

            if (cpDAO.updateMKNV(cp)) {
                JOptionPane.showMessageDialog(this,
                        "✅ Đổi mật khẩu thành công!",
                        "Thành công",
                        JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                AuthKhachHang.clear();
                LoginSystem sysF = new LoginSystem();
                sysF.setLocationRelativeTo(null);
                sysF.setVisible(true);
                return;
            } else {
                JOptionPane.showMessageDialog(this,
                        "❌ Đổi mật khẩu thất bại! Vui lòng kiểm tra lại.",
                        "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        if (AuthKhachHang.user == null) {
            this.dispose();
            SystemFrame sFrame = new SystemFrame();
            sFrame.setLocationRelativeTo(null);
            sFrame.setVisible(true);
            return;
        } else {
            this.dispose();
            ClientFrame sFrame = new ClientFrame();
            sFrame.setLocationRelativeTo(null);
            sFrame.setVisible(true);
            return;
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePasswordFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePasswordFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txt_email;
    private javax.swing.JPasswordField txt_mk_cu;
    private javax.swing.JPasswordField txt_mk_moi;
    private javax.swing.JPasswordField txt_xac_nhan_mk_moi;
    // End of variables declaration//GEN-END:variables
}
